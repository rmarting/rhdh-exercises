kind: ConfigMap
apiVersion: v1
metadata:
  name: rbac-policy
data:
  rbac-conditional-policies.yaml: |
    # Reference: https://docs.redhat.com/en/documentation/red_hat_developer_hub/1.4/html-single/authorization/index#con-rbac-conditional-policies-rhdh_title-authorization
    ---
    #result: CONDITIONAL
    #roleEntityRef: <role_entity_reference>
    #pluginId: <plugin_id>
    #permissionMapping:
    #  - read
    #  - update
    #  - delete
    #conditions: <conditions>
    ---
    result: CONDITIONAL
    roleEntityRef: 'role:default/team-a'
    pluginId: catalog
    resourceType: catalog-entity
    permissionMapping:
      - read
    conditions:
      # Show entities that the user is an owner of, that are of the kind 'User', that are of the kind 'Group',
      # OR are of the 'allOf' criteria
      anyOf:
        - rule: IS_ENTITY_OWNER
          resourceType: catalog-entity
          params:
            claims:
              - $ownerRefs
        - rule: IS_ENTITY_KIND
          resourceType: catalog-entity
          params:
            kinds:
              - Group
              - User
        # Show entities that have the 'gitlab' tag AND are of the kind 'Template'
        - allOf:
            - rule: HAS_METADATA
              resourceType: catalog-entity
              params:
                key: tags
                value: gitlab
            - rule: IS_ENTITY_KIND
              resourceType: catalog-entity
              params:
                kinds:
                  - Template
    ---
    # Team B can only see 'sample' templates
    result: CONDITIONAL
    roleEntityRef: 'role:default/team-b'
    pluginId: catalog
    resourceType: catalog-entity
    permissionMapping:
      - read
    conditions:
      anyOf:
        - not:
            rule: IS_ENTITY_KIND
            resourceType: catalog-entity
            params:
              kinds:
                - 'Template'
        - rule: HAS_METADATA
          resourceType: catalog-entity
          params:
            key: tags
            value: sample
        - rule: HAS_METADATA
          resourceType: catalog-entity
          params:
            key: tags
            value: sample
  rbac-policy.csv: |
    # Administrator Role
    # Catalog permissions
    #p, role:default/admins, catalog-entity, read, allow
    #p, role:default/admins, catalog.entity.read, read, allow
    #p, role:default/admins, catalog.entity.create, create, allow
    #p, role:default/admins, catalog.entity.refresh, update, allow
    #p, role:default/admins, catalog.entity.delete, delete, allow
    #p, role:default/admins, catalog.location.read, read, allow
    #p, role:default/admins, catalog.location.create, create, allow
    #p, role:default/admins, catalog.location.delete, delete, allow
    # Scaffolder permissions
    #p, role:default/admins, scaffolder-action, use, allow
    #p, role:default/admins, scaffolder.action.execute, use, allow
    #p, role:default/admins, scaffolder-template, read, allow
    #p, role:default/admins, scaffolder.template.parameter.read, read, allow
    #p, role:default/admins, scaffolder.template.step.read, read, allow
    #p, role:default/admins, scaffolder.task.create, create, allow
    #p, role:default/admins, scaffolder.task.cancel, use, allow
    #p, role:default/admins, scaffolder.task.read, read, allow
    # RBAC permissions
    #p, role:default/admins, policy-entity, read, allow
    #p, role:default/admins, policy.entity.read, read, allow
    #p, role:default/admins, policy.entity.create, create, allow
    #p, role:default/admins, policy.entity.update, update, allow
    #p, role:default/admins, policy.entity.delete, delete, allow
    # Kubernetes permissions
    #p, role:default/admins, kubernetes.proxy, use, allow
    # OCM permissions
    #p, role:default/admins, ocm.entity.read, read, allow
    #p, role:default/admins, ocm.cluster.read, read, allow
    # Topology permissions
    #p, role:default/admins, topology.view.read, read, allow
    # Bulk import
    #p, role:default/admins, bulk-import, use, allow
    #p, role:default/admins, bulk.import, use, allow

    # Admin User
    # this is not needed now with the new superUser setting
    #g, user:default/root, role:default/admins

    # Team-A Role
    # Catalog permissions
    p, role:default/team-a, catalog-entity, read, allow
    p, role:default/team-a, catalog.entity.read, read, allow
    p, role:default/team-a, catalog.entity.create, create, allow
    p, role:default/team-a, catalog.entity.refresh, update, allow
    p, role:default/team-a, catalog.entity.delete, delete, allow
    p, role:default/team-a, catalog.location.read, read, allow
    p, role:default/team-a, catalog.location.create, create, allow
    p, role:default/team-a, catalog.location.delete, delete, allow
    # Scaffolder permissions
    p, role:default/team-a, scaffolder-template, read, allow
    p, role:default/team-a, scaffolder.template.parameter.read, read, allow
    p, role:default/team-a, scaffolder.template.step.read, read, allow
    p, role:default/team-a, scaffolder-action, use, allow
    p, role:default/team-a, scaffolder.action.execute, use, allow
    p, role:default/team-a, scaffolder.task.read, read, allow
    p, role:default/team-a, scaffolder.task.create, create, allow
    p, role:default/team-a, scaffolder.task.cancel, use, allow

    # Team-B Role
    # Catalog permissions
    p, role:default/team-b, catalog-entity, read, allow
    p, role:default/team-b, catalog.entity.read, read, allow
    p, role:default/team-b, catalog.entity.create, create, deny
    p, role:default/team-b, catalog.entity.refresh, update, allow
    p, role:default/team-b, catalog.entity.delete, delete, deny
    p, role:default/team-b, catalog.location.read, read, allow
    p, role:default/team-b, catalog.location.create, create, deny
    p, role:default/team-b, catalog.location.delete, delete, deny
    # Scaffolder permissions
    p, role:default/team-b, scaffolder-template, read, allow
    p, role:default/team-b, scaffolder.template.parameter.read, read, allow
    p, role:default/team-b, scaffolder.template.step.read, read, allow
    p, role:default/team-b, scaffolder-action, use, allow
    p, role:default/team-b, scaffolder.action.execute, use, allow
    p, role:default/team-b, scaffolder.task.read, read, allow
    p, role:default/team-b, scaffolder.task.create, create, deny
    p, role:default/team-b, scaffolder.task.cancel, use, deny

    # Groups
    g, group:default/team-a, role:default/team-a
    g, group:default/team-b, role:default/team-b

    # Users
    #g, user:default/2, role:default/team-a
    #g, user:default/3, role:default/team-b
