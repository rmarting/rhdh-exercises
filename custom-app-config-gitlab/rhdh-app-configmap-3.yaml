kind: ConfigMap
apiVersion: v1
metadata:
  name: app-config-rhdh
data:
  app-config-rhdh.yaml: |
    signInPage: gitlab
    app:
      title: My Red Hat Developer Hub Instance
      #baseUrl: https://backstage-developer-hub-rhdh-gitlab.${basedomain}
    backend:
      auth:
        keys:
          - secret: ${BACKEND_SECRET}
      #baseUrl: https://backstage-developer-hub-rhdh-gitlab.${basedomain}
      #cors:
      #  origin: https://backstage-developer-hub-rhdh-gitlab.${basedomain}
    auth:
      environment: development
      providers:
        gitlab:
          development:
            clientId: ${AUTH_GITLAB_CLIENT_ID}
            clientSecret: ${AUTH_GITLAB_CLIENT_SECRET}
            audience: https://gitlab.${basedomain}
            signIn:
              resolvers:
                - resolver: usernameMatchingUserEntityName
                  dangerouslyAllowSignInWithoutUserInCatalog: true
    integrations:
      gitlab:
        - host: gitlab.${basedomain}
          token: ${GITLAB_TOKEN}
          apiBaseUrl: https://gitlab.${basedomain}/api/v4
          baseUrl: https://gitlab.${basedomain}
    catalog:
      processingInterval: { minutes: 90 }
      rules:
        - allow: [Component, System, Group, Resource, Location, Template, API, User, Domain, Type]
      providers:
        #github:
        #  providerId:
        #    organization: ${GITHUB_ORGANIZATION}
        #    catalogPath: '/**/catalog-info.yaml' # this will search all folders for catalog-info.yaml files
        #    #filters:
        #    #  repository: 'sample-components'
        #  orgCatalog:
        #    organization: ${GITHUB_ORGANIZATION}
        #    catalogPath: '/**/org-catalog.yaml' # this will search all folders for org-catalog.yaml files
        #    schedule:
        #      frequency:
        #        minutes: 10
        #      initialDelay:
        #        seconds: 15
        #      timeout:
        #        minutes: 5
        gitlab:
          myGitLab:
            host: gitlab.${basedomain} # Identifies one of the hosts set up in the integrations
            apiBaseUrl: https://gitlab.${basedomain}/api/v4
            branch: main # Optional. Used to discover on a specific branch
            fallbackBranch: master # Optional. Fallback to be used if there is no default branch configured at the Gitlab repository. It is only used, if `branch` is undefined. Uses `master` as default
            skipForkedRepos: false # Optional. If the project is a fork, skip repository
            entityFilename: catalog-info.yaml # Optional. Defaults to `catalog-info.yaml`
            projectPattern: '[\s\S]*' # Optional. Filters found projects based on provided patter. Defaults to `[\s\S]*`, which means to not filter anything
            schedule: # optional; same options as in TaskScheduleDefinition
              # supports cron, ISO duration, "human duration" as used in code
              frequency: { minutes: 5 }
              # supports ISO duration, "human duration" as used in code
              timeout: { minutes: 15 }